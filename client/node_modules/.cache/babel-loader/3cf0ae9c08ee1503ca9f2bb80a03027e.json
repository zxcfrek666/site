{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { Context } from \"../index\";\nimport { fetchDevices } from \"../http/deviceAPI\";\nimport { useCookies } from 'react-cookie';\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\n\nconst Basket = () => {\n  _s();\n\n  let cartNoEmpty = false;\n  const [cookies, setCookie] = useCookies();\n  const [device, setDevice] = useState([{\n    id: 1231\n  }, {\n    id: 1234123\n  }]);\n\n  const searchId = (devices, ids) => {\n    let aarr = [];\n    devices.forEach(element => {\n      if (ids.includes(element.id)) {\n        aarr.push(element);\n      }\n    });\n    return aarr;\n  };\n\n  useEffect(() => {\n    fetchDevices().then(data => {\n      setDevice(data.row);\n    });\n  }, []);\n  const cookieId = cookies.id;\n\n  if (cookieId) {\n    cartNoEmpty = true;\n  }\n\n  if (cartNoEmpty) {\n    const arrCookieId = cookieId.split('.').map(Number);\n    console.log(arrCookieId);\n    let id = Number(cookieId);\n    let ids = [1, 2, 3];\n    let result = []; // fetchDevices().then(data => {\n    //     const gserg = data.rows\n    //     const result = searchId(gserg, arrCookieId)\n    //     setDevice(result)\n    // })\n  }\n\n  return {\n    cartNoEmpty\n  };\n};\n\n_s(Basket, \"7oM4fH5olTGZN6ZxXzmMfPNJi9Q=\", false, function () {\n  return [useCookies];\n});\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["C:/Users/kwell/Desktop/rrrrstore/client/src/pages/Basket.jsx"],"names":["React","useEffect","useContext","useState","Context","fetchDevices","useCookies","Button","Card","Col","Container","Image","Row","Basket","cartNoEmpty","cookies","setCookie","device","setDevice","id","searchId","devices","ids","aarr","forEach","element","includes","push","then","data","row","cookieId","arrCookieId","split","map","Number","console","log","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,KAAvC,EAA8CC,GAA9C,QAAyD,iBAAzD;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,MAAIC,WAAW,GAAG,KAAlB;AAEA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBV,UAAU,EAAvC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAC;AAAEgB,IAAAA,EAAE,EAAE;AAAN,GAAD,EAAe;AAAEA,IAAAA,EAAE,EAAE;AAAN,GAAf,CAAD,CAApC;;AAEA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC/B,QAAIC,IAAI,GAAG,EAAX;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBC,OAAO,IAAI;AACvB,UAAIH,GAAG,CAACI,QAAJ,CAAaD,OAAO,CAACN,EAArB,CAAJ,EAA8B;AAC1BI,QAAAA,IAAI,CAACI,IAAL,CAAUF,OAAV;AACH;AACJ,KAJD;AAKA,WAAOF,IAAP;AACH,GARD;;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,GAAGuB,IAAf,CAAoBC,IAAI,IAAI;AACxBX,MAAAA,SAAS,CAACW,IAAI,CAACC,GAAN,CAAT;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAMC,QAAQ,GAAGhB,OAAO,CAACI,EAAzB;;AAEA,MAAIY,QAAJ,EAAc;AACVjB,IAAAA,WAAW,GAAG,IAAd;AACH;;AAED,MAAIA,WAAJ,EAAiB;AACb,UAAMkB,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,GAApB,CAAwBC,MAAxB,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,QAAIb,EAAE,GAAGgB,MAAM,CAACJ,QAAD,CAAf;AAEA,QAAIT,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;AACA,QAAIgB,MAAM,GAAG,EAAb,CAPa,CASb;AACA;AACA;AACA;AACA;AACH;;AACD,SACI;AAACxB,IAAAA;AAAD,GADJ;AAGH,CA5CD;;GAAMD,M;UAG2BP,U;;;KAH3BO,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { Context } from \"../index\";\nimport { fetchDevices } from \"../http/deviceAPI\";\nimport { useCookies } from 'react-cookie';\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\n\n\nconst Basket = () => {\n    let cartNoEmpty = false;\n\n    const [cookies, setCookie] = useCookies();\n    const [device, setDevice] = useState([{ id: 1231 }, { id: 1234123 }])\n\n    const searchId = (devices, ids) => {\n        let aarr = [];\n        devices.forEach(element => {\n            if (ids.includes(element.id)) {\n                aarr.push(element)\n            }\n        });\n        return aarr;\n    }\n    useEffect(() => {\n        fetchDevices().then(data => {\n            setDevice(data.row)\n        })\n    }, [])\n    const cookieId = cookies.id;\n\n    if (cookieId) {\n        cartNoEmpty = true;\n    }\n\n    if (cartNoEmpty) {\n        const arrCookieId = cookieId.split('.').map(Number);\n        console.log(arrCookieId);\n\n        let id = Number(cookieId);\n\n        let ids = [1, 2, 3]\n        let result = []\n\n        // fetchDevices().then(data => {\n        //     const gserg = data.rows\n        //     const result = searchId(gserg, arrCookieId)\n        //     setDevice(result)\n        // })\n    }\n    return (\n        {cartNoEmpty}\n    );\n};\n\nexport default Basket;\n"]},"metadata":{},"sourceType":"module"}