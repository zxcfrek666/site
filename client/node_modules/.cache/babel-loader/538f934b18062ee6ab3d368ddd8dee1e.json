{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kwell\\\\Desktop\\\\rrrrstore\\\\client\\\\src\\\\pages\\\\ShopIskustvenyelki.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport Slider from '@mui/material/Slider'; // import { useCookies } from '../services/cookie';\n// import { withCookies } from '../services/cookie';\n// const COOKIE_KEY = 'fa2'\n// const [cookie, setCookie] = useCookies(COOKIE_KEY);\n// let gsegr = JSON.parse(cookie('fa2'))\n// setCookie('gserger')\n\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const [value, setValue] = useState([0, 131230]);\n\n  const updateRange = (e, data) => {\n    setValue(data);\n  };\n\n  const setOrDeleteTypes = id => {\n    let gser = true;\n    let gserg = device.selectedTypes.forEa;\n  }; // useEffect(() => {\n  //     device.brands.forEach(brand => {\n  //         if (brand.id === 1)\n  //             device.setSelectedBrand(brand)\n  //     });\n  // }, [])\n  // useEffect(() => {\n  //     fetchTypes().then(data => device.setTypes(data))\n  //     fetchBrands().then(data => device.setBrands(data))\n  //     })\n  // }, [])\n\n\n  const fawefe2f = (dataa, value1, value2) => {\n    let result = {\n      count: 0,\n      rows: []\n    };\n    dataa.forEach(element => {\n      if (value1 <= element.price && element.price <= value2) {\n        result.rows.push(element);\n        result.count += 1;\n      }\n    });\n    return result;\n  };\n\n  const maxPrice = dataa => {\n    let maxPrice = 0;\n    dataa.forEach(element => {\n      if (element.price > maxPrice) {\n        maxPrice = element.price;\n      }\n    });\n    return maxPrice;\n  };\n\n  useEffect(() => {\n    fetchDevices().then(data => {\n      let maxPricee = maxPrice(data.rows);\n      device.setAllDevices(data.rows);\n      device.setMaxPrice(maxPricee);\n      setValue([0, maxPricee]);\n    });\n    fetchTypes().then(data => device.setTypes(data));\n  }, []);\n  useEffect(() => {\n    let result = fawefe2f(device.allDevices, value[0], value[1]);\n    device.setDevices(result.rows);\n  }, [device.page, device.selectedType, device.selectedBrand, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        padding: '20px 0'\n      },\n      children: \"\\u0418\\u0441\\u043A\\u0443\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0435\\u043B\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E\\u0434\\u0431\\u043E\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0426\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs-range-slider\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[0],\n                onChange: e => setValue([e.target.value, value[1]])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[1],\n                onChange: e => setValue([value[0], e.target.value])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                sx: {\n                  marginTop: 2,\n                  width: '100%',\n                  color: 'green'\n                },\n                min: 0,\n                max: device.maxPrice,\n                step: 10,\n                value: value,\n                onChange: updateRange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: device.types.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => console.log(`нажал на ${item.id}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(DeviceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}, \"kMeLGu/OnzcEs2vQa76GxsX5iyU=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/kwell/Desktop/rrrrstore/client/src/pages/ShopIskustvenyelki.js"],"names":["React","useContext","useEffect","useState","Container","Row","Col","TypeBar","BrandBar","DeviceList","observer","Context","fetchBrands","fetchDevices","fetchTypes","Pages","Slider","Shop","device","value","setValue","updateRange","e","data","setOrDeleteTypes","id","gser","gserg","selectedTypes","forEa","fawefe2f","dataa","value1","value2","result","count","rows","forEach","element","price","push","maxPrice","then","maxPricee","setAllDevices","setMaxPrice","setTypes","allDevices","setDevices","page","selectedType","selectedBrand","padding","target","marginTop","width","color","types","map","item","console","log","paddingLeft","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport Slider from '@mui/material/Slider';\r\n\r\n// import { useCookies } from '../services/cookie';\r\n// import { withCookies } from '../services/cookie';\r\n\r\n// const COOKIE_KEY = 'fa2'\r\n// const [cookie, setCookie] = useCookies(COOKIE_KEY);\r\n\r\n// let gsegr = JSON.parse(cookie('fa2'))\r\n// setCookie('gserger')\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context)\r\n    const [value, setValue] = useState([0, 131230])\r\n\r\n    const updateRange = (e, data) => {\r\n        setValue(data)\r\n    }\r\n    const setOrDeleteTypes = (id) => {\r\n        let gser = true\r\n        let gserg = device.selectedTypes.forEa\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     device.brands.forEach(brand => {\r\n    //         if (brand.id === 1)\r\n    //             device.setSelectedBrand(brand)\r\n    //     });\r\n    // }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     fetchTypes().then(data => device.setTypes(data))\r\n    //     fetchBrands().then(data => device.setBrands(data))\r\n    //     })\r\n    // }, [])\r\n\r\n    const fawefe2f = (dataa, value1, value2) => {\r\n        let result = { count: 0, rows: [] }\r\n        dataa.forEach(element => {\r\n            if (value1 <= element.price && element.price <= value2) {\r\n                result.rows.push(element);\r\n                result.count += 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    const maxPrice = (dataa) => {\r\n        let maxPrice = 0;\r\n        dataa.forEach(element => {\r\n            if (element.price > maxPrice) {\r\n                maxPrice = element.price\r\n            }\r\n        });\r\n        return maxPrice;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDevices().then(data => {\r\n            let maxPricee = maxPrice(data.rows);\r\n            device.setAllDevices(data.rows)\r\n            device.setMaxPrice(maxPricee)\r\n            setValue([0, maxPricee])\r\n        })\r\n        fetchTypes().then(data => device.setTypes(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let result = fawefe2f(device.allDevices, value[0], value[1])\r\n        device.setDevices(result.rows)\r\n    }, [device.page, device.selectedType, device.selectedBrand, value])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"myContainer\">\r\n            <h1 style={{ padding: '20px 0' }}>Искуственные елку</h1>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <div className=\"filter\">\r\n                        <h4>Фильтр подбора</h4>\r\n                        <div className=\"block-filter\">\r\n                            <p>Цена</p>\r\n                            <div className=\"inputs-range-slider\">\r\n                                <input\r\n                                    value={value[0]}\r\n                                    onChange={e => setValue([e.target.value, value[1]])}\r\n                                />\r\n                                <input\r\n                                    value={value[1]}\r\n                                    onChange={e => setValue([value[0], e.target.value])}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    sx={{\r\n                                        marginTop: 2,\r\n                                        width: '100%',\r\n                                        color: 'green',\r\n                                    }}\r\n                                    min={0}\r\n                                    max={device.maxPrice}\r\n                                    step={10}\r\n                                    value={value}\r\n                                    onChange={updateRange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter\">\r\n                            <p>Материалы</p>\r\n                            <div className=\"filterButton\">\r\n                                {device.types.map(item =>\r\n                                <label key={item.id}>\r\n                                    <input type=\"checkbox\" onClick={() => console.log(`нажал на ${item.id}`)} />\r\n                                    <span style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TypeBar />\r\n                </Col>\r\n                <Col md={9}>\r\n                    {/* <BrandBar /> */}\r\n                    <DeviceList />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}