{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kwell\\\\Desktop\\\\rrrrstore\\\\client\\\\src\\\\pages\\\\ShopIskustvenyelki.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes, fetchMaterials, fetchMadeCountries } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { Pagination } from '../components/Pagination';\nimport Slider from '@mui/material/Slider';\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const [value, setValue] = useState([0, 1312302453]);\n  const [selectMaterial, setSelectMaterial] = useState([]);\n  const [selectMade, setSelectMade] = useState([]);\n  const [fiterTypes, setFiterTypes] = useState([]);\n  const [useMaterials, setUseMaterials] = useState([]);\n  const [useMadeCountry, setUseMadeCountry] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage] = useState(200);\n\n  const updateRange = (e, data) => {\n    setValue(data);\n  };\n\n  const setOrDeleteTypes = id => {\n    let gser = true;\n\n    if (selectMaterial !== 0) {\n      selectMaterial.forEach(element => {\n        if (element === id) {\n          gser = false;\n        }\n      });\n    }\n\n    let result = selectMaterial;\n\n    if (gser === true) {\n      let newArr = result.filter(item => true);\n      newArr.push(id);\n      setSelectMaterial(newArr);\n    }\n\n    if (gser === false) {\n      let newArr = result.filter(item => item !== id);\n      setSelectMaterial(newArr);\n    }\n  };\n\n  const setOrDeleteCountry = id => {\n    let gser = true;\n\n    if (selectMade !== 0) {\n      selectMade.forEach(element => {\n        if (element === id) {\n          gser = false;\n        }\n      });\n    }\n\n    let result = selectMade;\n\n    if (gser === true) {\n      let newArr = result.filter(item => true);\n      newArr.push(id);\n      setSelectMade(newArr);\n    }\n\n    if (gser === false) {\n      let newArr = result.filter(item => item !== id);\n      setSelectMade(newArr);\n    }\n  };\n\n  const fawefe2f = (dataa, value1, value2) => {\n    let result = [];\n    dataa.forEach(element => {\n      if (value1 <= element.price && element.price <= value2) {\n        result.push(element);\n      }\n    });\n\n    if (selectMaterial.length !== 0) {\n      const newArr = result.filter(made => selectMaterial.includes(made.materialId));\n      result = newArr;\n    }\n\n    ;\n    console.log(selectMade);\n\n    if (selectMade.length !== 0) {\n      console.log(result);\n      const newArr = result.filter(made => selectMade.includes(made.madeCountryId));\n      result = newArr;\n    }\n\n    ;\n    return result;\n  };\n\n  const filterMaterial = (allDevices, allMaterials) => {\n    let idArr = [];\n    allDevices.forEach(element => {\n      if (!idArr.includes(element.materialId)) {\n        idArr.push(element.materialId);\n      }\n    });\n    const filterMaterials = allMaterials.filter(material => idArr.includes(material.id));\n    setUseMaterials(filterMaterials);\n  };\n\n  const filterMadeCountry = (allDevices, allMadeCountry) => {\n    let idArr = [];\n    allDevices.forEach(element => {\n      if (!idArr.includes(element.madeCountryId)) {\n        idArr.push(element.madeCountryId);\n      }\n    });\n    const filterMade = allMadeCountry.filter(made => idArr.includes(made.id));\n    setUseMadeCountry(filterMade);\n  };\n\n  const maxPrice = dataa => {\n    let maxPrice = 0;\n    dataa.forEach(element => {\n      if (element.price > maxPrice) {\n        maxPrice = element.price;\n      }\n    });\n    return maxPrice;\n  };\n\n  useEffect(() => {\n    fetchDevices().then(data => {\n      let maxPricee = maxPrice(data.rows);\n      device.setAllDevices(data.rows);\n      device.setMaxPrice(maxPricee);\n      setValue([0, maxPricee]);\n    });\n    fetchTypes().then(data => device.setTypes(data));\n    fetchMaterials().then(data => device.setMaterials(data));\n    fetchMadeCountries().then(data => device.setMadeCountry(data));\n  }, []);\n  useEffect(() => {\n    filterMaterial(device.allDevices, device.materials);\n    filterMadeCountry(device.allDevices, device.madeCountry);\n  }, [device.materials, device.madeCountry]);\n  useEffect(() => {\n    let result = fawefe2f(device.allDevices, value[0], value[1]);\n    device.setDevices(result);\n    setCurrentPage(1);\n    console.log(result);\n  }, [device.page, device.selectedType, device.selectedBrand, value, selectMaterial, selectMade]);\n  console.log(device.allDevices);\n  const lastProductIndex = currentPage * countriesPerPage;\n  const firstProductIndex = lastProductIndex - countriesPerPage;\n  const currentProduct = device.devices.slice(firstProductIndex, lastProductIndex);\n\n  const paginate = numberPage => {\n    setCurrentPage(numberPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        padding: '20px 0'\n      },\n      children: \"\\u0418\\u0441\\u043A\\u0443\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0435\\u043B\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E\\u0434\\u0431\\u043E\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0426\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs-range-slider\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[0],\n                onChange: e => setValue([e.target.value, value[1]])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[1],\n                onChange: e => setValue([value[0], e.target.value])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                sx: {\n                  marginTop: 2,\n                  width: '100%',\n                  color: 'green'\n                },\n                min: 0,\n                max: device.maxPrice,\n                step: 10,\n                value: value,\n                onChange: updateRange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title-filter\",\n              children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: useMaterials.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => setOrDeleteTypes(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filter-item\",\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title-filter\",\n              children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430 \\u0438\\u0437\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: useMadeCountry.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => setOrDeleteCountry(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filter-item\",\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(DeviceList, {\n          currentProduct: currentProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          countriesPerPage: countriesPerPage,\n          totalProduct: device.devices.length,\n          paginate: paginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}, \"5H+trZ5sHxp0lyEl9VZ9W5/6774=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/kwell/Desktop/rrrrstore/client/src/pages/ShopIskustvenyelki.js"],"names":["React","useContext","useEffect","useState","Container","Row","Col","DeviceList","observer","Context","fetchBrands","fetchDevices","fetchTypes","fetchMaterials","fetchMadeCountries","Pages","Pagination","Slider","Shop","device","value","setValue","selectMaterial","setSelectMaterial","selectMade","setSelectMade","fiterTypes","setFiterTypes","useMaterials","setUseMaterials","useMadeCountry","setUseMadeCountry","loading","setLoading","currentPage","setCurrentPage","countriesPerPage","updateRange","e","data","setOrDeleteTypes","id","gser","forEach","element","result","newArr","filter","item","push","setOrDeleteCountry","fawefe2f","dataa","value1","value2","price","length","made","includes","materialId","console","log","madeCountryId","filterMaterial","allDevices","allMaterials","idArr","filterMaterials","material","filterMadeCountry","allMadeCountry","filterMade","maxPrice","then","maxPricee","rows","setAllDevices","setMaxPrice","setTypes","setMaterials","setMadeCountry","materials","madeCountry","setDevices","page","selectedType","selectedBrand","lastProductIndex","firstProductIndex","currentProduct","devices","slice","paginate","numberPage","padding","target","marginTop","width","color","map","paddingLeft","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes, fetchMaterials, fetchMadeCountries } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { Pagination } from '../components/Pagination';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nconst Shop = observer(() => {\r\n\r\n    const { device } = useContext(Context)\r\n    const [value, setValue] = useState([0, 1312302453])\r\n    const [selectMaterial, setSelectMaterial] = useState([])\r\n    const [selectMade, setSelectMade] = useState([])\r\n    const [fiterTypes, setFiterTypes] = useState([])\r\n    const [useMaterials, setUseMaterials] = useState([])\r\n    const [useMadeCountry, setUseMadeCountry] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [countriesPerPage] = useState(200)\r\n\r\n\r\n\r\n    const updateRange = (e, data) => {\r\n        setValue(data)\r\n    }\r\n    const setOrDeleteTypes = (id) => {\r\n        let gser = true;\r\n        if (selectMaterial !== 0) {\r\n            selectMaterial.forEach(element => {\r\n                if (element === id) {\r\n                    gser = false;\r\n                }\r\n            });\r\n        }\r\n        let result = selectMaterial\r\n        if (gser === true) {\r\n            let newArr = result.filter(item => true)\r\n            newArr.push(id)\r\n            setSelectMaterial(newArr)\r\n        }\r\n        if (gser === false) {\r\n            let newArr = result.filter(item => item !== id)\r\n            setSelectMaterial(newArr)\r\n        }\r\n\r\n    }\r\n\r\n    const setOrDeleteCountry = (id) => {\r\n        let gser = true;\r\n        if (selectMade !== 0) {\r\n            selectMade.forEach(element => {\r\n                if (element === id) {\r\n                    gser = false;\r\n                }\r\n            });\r\n        }\r\n        let result = selectMade\r\n        if (gser === true) {\r\n            let newArr = result.filter(item => true)\r\n            newArr.push(id)\r\n            setSelectMade(newArr)\r\n        }\r\n        if (gser === false) {\r\n            let newArr = result.filter(item => item !== id)\r\n            setSelectMade(newArr)\r\n        }\r\n\r\n    }\r\n\r\n    const fawefe2f = (dataa, value1, value2) => {\r\n        let result = []\r\n        dataa.forEach(element => {\r\n            if (value1 <= element.price && element.price <= value2) {\r\n                result.push(element);\r\n            }\r\n        });\r\n        if (selectMaterial.length !== 0) {\r\n            const newArr = result.filter(made => selectMaterial.includes(made.materialId))\r\n            result = newArr;\r\n        };\r\n        console.log(selectMade);\r\n        if (selectMade.length !== 0) {\r\n            console.log(result);\r\n            const newArr = result.filter(made => selectMade.includes(made.madeCountryId))\r\n            result = newArr;\r\n        };\r\n        return result;\r\n    }\r\n    const filterMaterial = (allDevices, allMaterials) => {\r\n        let idArr = []\r\n        allDevices.forEach(element => {\r\n            if (!idArr.includes(element.materialId)) {\r\n                idArr.push(element.materialId)\r\n            }\r\n        });\r\n        const filterMaterials = allMaterials.filter(material => idArr.includes(material.id))\r\n        setUseMaterials(filterMaterials)\r\n    }\r\n    const filterMadeCountry = (allDevices, allMadeCountry) => {\r\n        let idArr = []\r\n        allDevices.forEach(element => {\r\n            if (!idArr.includes(element.madeCountryId)) {\r\n                idArr.push(element.madeCountryId)\r\n            }\r\n        });\r\n        const filterMade = allMadeCountry.filter(made => idArr.includes(made.id))\r\n        setUseMadeCountry(filterMade)\r\n    }\r\n\r\n    const maxPrice = (dataa) => {\r\n        let maxPrice = 0;\r\n        dataa.forEach(element => {\r\n            if (element.price > maxPrice) {\r\n                maxPrice = element.price\r\n            }\r\n        });\r\n        return maxPrice;\r\n    }\r\n    useEffect(() => {\r\n        fetchDevices().then(data => {\r\n            let maxPricee = maxPrice(data.rows);\r\n            device.setAllDevices(data.rows)\r\n            device.setMaxPrice(maxPricee)\r\n            setValue([0, maxPricee])\r\n        })\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchMaterials().then(data => device.setMaterials(data))\r\n        fetchMadeCountries().then(data => device.setMadeCountry(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        filterMaterial(device.allDevices, device.materials)\r\n        filterMadeCountry(device.allDevices, device.madeCountry)\r\n    }, [device.materials, device.madeCountry])\r\n\r\n    useEffect(() => {\r\n        let result = fawefe2f(device.allDevices, value[0], value[1])\r\n        device.setDevices(result)\r\n        setCurrentPage(1)\r\n        console.log(result);\r\n    }, [device.page, device.selectedType, device.selectedBrand, value, selectMaterial, selectMade])\r\n\r\n    console.log(device.allDevices);\r\n    const lastProductIndex = currentPage * countriesPerPage;\r\n    const firstProductIndex = lastProductIndex - countriesPerPage;\r\n    const currentProduct = device.devices.slice(firstProductIndex, lastProductIndex)\r\n\r\n    const paginate = (numberPage) => {\r\n        setCurrentPage(numberPage)\r\n    }\r\n\r\n    return (\r\n        <div className=\"myContainer\">\r\n            <h1 style={{ padding: '20px 0' }}>Искуственные елку</h1>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <div className=\"filter\">\r\n                        <h4>Фильтр подбора</h4>\r\n                        <div className=\"block-filter\">\r\n                            <p>Цена</p>\r\n                            <div className=\"inputs-range-slider\">\r\n                                <input\r\n                                    value={value[0]}\r\n                                    onChange={e => setValue([e.target.value, value[1]])}\r\n                                />\r\n                                <input\r\n                                    value={value[1]}\r\n                                    onChange={e => setValue([value[0], e.target.value])}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    sx={{\r\n                                        marginTop: 2,\r\n                                        width: '100%',\r\n                                        color: 'green',\r\n                                    }}\r\n                                    min={0}\r\n                                    max={device.maxPrice}\r\n                                    step={10}\r\n                                    value={value}\r\n                                    onChange={updateRange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter-item\">\r\n                            <p className=\"title-filter\">Материалы</p>\r\n                            <div className=\"filterButton\">\r\n                                {useMaterials.map(item =>\r\n                                    <label key={item.id}>\r\n                                        <input type=\"checkbox\" onClick={() => setOrDeleteTypes(item.id)} />\r\n                                        <span className=\"filter-item\" style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter-item\">\r\n                            <p className=\"title-filter\">Страна изготовитель</p>\r\n                            <div className=\"filterButton\">\r\n                                {useMadeCountry.map(item =>\r\n                                    <label key={item.id}>\r\n                                        <input type=\"checkbox\" onClick={() => setOrDeleteCountry(item.id)} />\r\n                                        <span className=\"filter-item\" style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <DeviceList currentProduct={currentProduct} />\r\n                    <Pagination countriesPerPage={countriesPerPage} totalProduct={device.devices.length} paginate={paginate} />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}