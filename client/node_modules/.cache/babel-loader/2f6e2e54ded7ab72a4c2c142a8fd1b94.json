{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kwell\\\\Desktop\\\\rstore\\\\client\\\\src\\\\pages\\\\ShopIskustvenyelki.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport Slider from '@mui/material/Slider';\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const [value, setValue] = useState([30, 40]);\n\n  const updateRange = (e, data) => {\n    setValue(data);\n  };\n\n  useEffect(() => {\n    device.brands.forEach(brand => {\n      if (brand.id === 1) device.setSelectedBrand(brand);\n    });\n  }, []);\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevices(null, 1, 1, 7).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 7).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device.page, device.selectedType, device.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myContainer\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: value[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            value: value,\n            onChange: updateRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1000\",\n            step: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1000\",\n            step: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), \"gsergserg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [\"jdtyjdrtyj\", /*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeviceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}, \"rIYuP0r0Kr32pEmtgzUYtzncTiY=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/kwell/Desktop/rstore/client/src/pages/ShopIskustvenyelki.js"],"names":["React","useContext","useEffect","useState","Container","Row","Col","TypeBar","BrandBar","DeviceList","observer","Context","fetchBrands","fetchDevices","fetchTypes","Pages","Slider","Shop","device","value","setValue","updateRange","e","data","brands","forEach","brand","id","setSelectedBrand","then","setTypes","setBrands","setDevices","rows","setTotalCount","count","selectedType","selectedBrand","page"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport Slider from '@mui/material/Slider';\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [value, setValue] = useState([30, 40])\r\n    const updateRange = (e, data) => {\r\n        setValue(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        device.brands.forEach(brand => {\r\n            if(brand.id === 1)\r\n            device.setSelectedBrand(brand)\r\n        });\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, 1, 1, 7).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 7).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <div className=\"myContainer\">\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                    <input \r\n                    value={value[1]}\r\n                    />\r\n                    <div>\r\n                        <Slider\r\n                        value={value}\r\n                        onChange={updateRange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"range-slider\">\r\n                        <input \r\n                            type=\"range\"\r\n                            min=\"0\"\r\n                            max=\"1000\"\r\n                            step=\"10\"\r\n                        />\r\n                        <input \r\n                            type=\"range\"\r\n                            min=\"0\"\r\n                            max=\"1000\"\r\n                            step=\"10\"\r\n                        />\r\n                        gsergserg\r\n                    </div>\r\n                </Col>\r\n                <Col md={9}>\r\n                    jdtyjdrtyj\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}