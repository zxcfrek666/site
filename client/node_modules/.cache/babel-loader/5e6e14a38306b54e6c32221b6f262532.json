{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kwell\\\\Desktop\\\\rrrrstore\\\\client\\\\src\\\\pages\\\\ShopIskustvenyelki.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes, fetchMaterials, fetchMadeCountries } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { Pagination } from '../components/Pagination';\nimport Slider from '@mui/material/Slider';\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const [value, setValue] = useState([0, 1312302453]);\n  const [selectMaterial, setSelectMaterial] = useState([]);\n  const [selectMade, setSelectMade] = useState([]);\n  const [selectType, setSelectType] = useState([]);\n  const [fiterTypes, setFiterTypes] = useState([]);\n  const [useMaterials, setUseMaterials] = useState([]);\n  const [useMadeCountry, setUseMadeCountry] = useState([]);\n  const [useType, setUseType] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage] = useState(200);\n\n  const updateRange = (e, data) => {\n    setValue(data);\n  };\n\n  const setOrDeleteTypes = id => {\n    let gser = true;\n\n    if (selectMaterial !== 0) {\n      selectMaterial.forEach(element => {\n        if (element === id) {\n          gser = false;\n        }\n      });\n    }\n\n    let result = selectMaterial;\n\n    if (gser === true) {\n      let newArr = result.filter(item => true);\n      newArr.push(id);\n      setSelectMaterial(newArr);\n    }\n\n    if (gser === false) {\n      let newArr = result.filter(item => item !== id);\n      setSelectMaterial(newArr);\n    }\n  };\n\n  const setOrDeleteCountry = id => {\n    let gser = true;\n\n    if (selectMade !== 0) {\n      selectMade.forEach(element => {\n        if (element === id) {\n          gser = false;\n        }\n      });\n    }\n\n    let result = selectMade;\n\n    if (gser === true) {\n      let newArr = result.filter(item => true);\n      newArr.push(id);\n      setSelectMade(newArr);\n    }\n\n    if (gser === false) {\n      let newArr = result.filter(item => item !== id);\n      setSelectMade(newArr);\n    }\n  };\n\n  const setOrDeleteType = id => {\n    let gser = true;\n\n    if (selectType !== 0) {\n      selectType.forEach(element => {\n        if (element === id) {\n          gser = false;\n        }\n      });\n    }\n\n    let result = selectType;\n\n    if (gser === true) {\n      let newArr = result.filter(item => true);\n      newArr.push(id);\n      setSelectType(newArr);\n    }\n\n    if (gser === false) {\n      let newArr = result.filter(item => item !== id);\n      setSelectType(newArr);\n    }\n  };\n\n  const productFilter = (dataa, value1, value2) => {\n    let result = [];\n    dataa.forEach(element => {\n      if (value1 <= element.price && element.price <= value2) {\n        result.push(element);\n      }\n    });\n\n    if (selectMaterial.length !== 0) {\n      const newArr = result.filter(made => selectMaterial.includes(made.materialId));\n      result = newArr;\n    }\n\n    ;\n\n    if (selectMade.length !== 0) {\n      const newArr = result.filter(made => selectMade.includes(made.madeCountryId));\n      result = newArr;\n    }\n\n    ;\n\n    if (selectType.length !== 0) {\n      const newArr = result.filter(type => selectMade.includes(made.typeId));\n      result = newArr;\n    }\n\n    ;\n    return result;\n  };\n\n  const filterMaterial = (allDevices, allMaterials) => {\n    let idArr = [];\n    allDevices.forEach(element => {\n      if (!idArr.includes(element.materialId)) {\n        idArr.push(element.materialId);\n      }\n    });\n    const filterMaterials = allMaterials.filter(material => idArr.includes(material.id));\n    setUseMaterials(filterMaterials);\n  };\n\n  const filterMadeCountry = (allDevices, allMadeCountry) => {\n    let idArr = [];\n    allDevices.forEach(element => {\n      if (!idArr.includes(element.madeCountryId)) {\n        idArr.push(element.madeCountryId);\n      }\n    });\n    const filterMade = allMadeCountry.filter(made => idArr.includes(made.id));\n    setUseMadeCountry(filterMade);\n  };\n\n  const filterType = (allDevices, allType) => {\n    let idArr = [];\n    allDevices.forEach(element => {\n      if (!idArr.includes(element.typeId)) {\n        idArr.push(element.typeId);\n      }\n    });\n    const filterType = allType.filter(type => idArr.includes(type.id));\n    setUseType(filterType);\n  };\n\n  const maxPrice = dataa => {\n    let maxPrice = 0;\n    dataa.forEach(element => {\n      if (element.price > maxPrice) {\n        maxPrice = element.price;\n      }\n    });\n    return maxPrice;\n  };\n\n  useEffect(() => {\n    fetchDevices().then(data => {\n      let maxPricee = maxPrice(data.rows);\n      device.setAllDevices(data.rows);\n      device.setMaxPrice(maxPricee);\n      setValue([0, maxPricee]);\n    });\n    fetchTypes().then(data => device.setTypes(data));\n    fetchMaterials().then(data => device.setMaterials(data));\n    fetchMadeCountries().then(data => device.setMadeCountry(data));\n  }, []);\n  useEffect(() => {\n    filterMaterial(device.allDevices, device.materials);\n    filterMadeCountry(device.allDevices, device.madeCountry);\n    filterType(device.allDevices, device.types);\n  }, [device.materials, device.madeCountry]);\n  useEffect(() => {\n    let result = productFilter(device.allDevices, value[0], value[1]);\n    device.setDevices(result);\n    setCurrentPage(1);\n    console.log(result);\n  }, [device.page, device.selectedType, device.selectedBrand, value, selectMaterial, selectMade]);\n  console.log(device.allDevices);\n  const lastProductIndex = currentPage * countriesPerPage;\n  const firstProductIndex = lastProductIndex - countriesPerPage;\n  const currentProduct = device.devices.slice(firstProductIndex, lastProductIndex);\n\n  const paginate = numberPage => {\n    setCurrentPage(numberPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        padding: '20px 0'\n      },\n      children: \"\\u0418\\u0441\\u043A\\u0443\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0435\\u043B\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E\\u0434\\u0431\\u043E\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0426\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputs-range-slider\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[0],\n                onChange: e => setValue([e.target.value, value[1]])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: value[1],\n                onChange: e => setValue([value[0], e.target.value])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                sx: {\n                  marginTop: 2,\n                  width: '100%',\n                  color: 'green'\n                },\n                min: 0,\n                max: device.maxPrice,\n                step: 10,\n                value: value,\n                onChange: updateRange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title-filter\",\n              children: \"\\u041C\\u0430\\u0442\\u0435\\u0440\\u0438\\u0430\\u043B\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: useMaterials.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => setOrDeleteTypes(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filter-item\",\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title-filter\",\n              children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430 \\u0438\\u0437\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: useMadeCountry.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => setOrDeleteCountry(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filter-item\",\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title-filter\",\n              children: \"\\u0412\\u0438\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterButton\",\n              children: useType.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => setOrDeleteType(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filter-item\",\n                  style: {\n                    paddingLeft: 10\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(DeviceList, {\n          currentProduct: currentProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          countriesPerPage: countriesPerPage,\n          totalProduct: device.devices.length,\n          paginate: paginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}, \"FKyv5x1k8ep0W2HQRyJH967ScaQ=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/kwell/Desktop/rrrrstore/client/src/pages/ShopIskustvenyelki.js"],"names":["React","useContext","useEffect","useState","Row","Col","DeviceList","observer","Context","fetchBrands","fetchDevices","fetchTypes","fetchMaterials","fetchMadeCountries","Pages","Pagination","Slider","Shop","device","value","setValue","selectMaterial","setSelectMaterial","selectMade","setSelectMade","selectType","setSelectType","fiterTypes","setFiterTypes","useMaterials","setUseMaterials","useMadeCountry","setUseMadeCountry","useType","setUseType","loading","setLoading","currentPage","setCurrentPage","countriesPerPage","updateRange","e","data","setOrDeleteTypes","id","gser","forEach","element","result","newArr","filter","item","push","setOrDeleteCountry","setOrDeleteType","productFilter","dataa","value1","value2","price","length","made","includes","materialId","madeCountryId","type","typeId","filterMaterial","allDevices","allMaterials","idArr","filterMaterials","material","filterMadeCountry","allMadeCountry","filterMade","filterType","allType","maxPrice","then","maxPricee","rows","setAllDevices","setMaxPrice","setTypes","setMaterials","setMadeCountry","materials","madeCountry","types","setDevices","console","log","page","selectedType","selectedBrand","lastProductIndex","firstProductIndex","currentProduct","devices","slice","paginate","numberPage","padding","target","marginTop","width","color","map","paddingLeft","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes, fetchMaterials, fetchMadeCountries } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { Pagination } from '../components/Pagination';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nconst Shop = observer(() => {\r\n\r\n    const { device } = useContext(Context)\r\n    const [value, setValue] = useState([0, 1312302453])\r\n    const [selectMaterial, setSelectMaterial] = useState([])\r\n    const [selectMade, setSelectMade] = useState([])\r\n    const [selectType, setSelectType] = useState([])\r\n    const [fiterTypes, setFiterTypes] = useState([])\r\n    const [useMaterials, setUseMaterials] = useState([])\r\n    const [useMadeCountry, setUseMadeCountry] = useState([])\r\n    const [useType, setUseType] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [countriesPerPage] = useState(200)\r\n\r\n\r\n\r\n    const updateRange = (e, data) => {\r\n        setValue(data)\r\n    }\r\n    const setOrDeleteTypes = (id) => {\r\n        let gser = true;\r\n        if (selectMaterial !== 0) {\r\n            selectMaterial.forEach(element => {\r\n                if (element === id) {\r\n                    gser = false;\r\n                }\r\n            });\r\n        }\r\n        let result = selectMaterial\r\n        if (gser === true) {\r\n            let newArr = result.filter(item => true)\r\n            newArr.push(id)\r\n            setSelectMaterial(newArr)\r\n        }\r\n        if (gser === false) {\r\n            let newArr = result.filter(item => item !== id)\r\n            setSelectMaterial(newArr)\r\n        }\r\n    }\r\n\r\n    const setOrDeleteCountry = (id) => {\r\n        let gser = true;\r\n        if (selectMade !== 0) {\r\n            selectMade.forEach(element => {\r\n                if (element === id) {\r\n                    gser = false;\r\n                }\r\n            });\r\n        }\r\n        let result = selectMade\r\n        if (gser === true) {\r\n            let newArr = result.filter(item => true)\r\n            newArr.push(id)\r\n            setSelectMade(newArr)\r\n        }\r\n        if (gser === false) {\r\n            let newArr = result.filter(item => item !== id)\r\n            setSelectMade(newArr)\r\n        }\r\n    }\r\n\r\n    const setOrDeleteType = (id) => {\r\n        let gser = true;\r\n        if (selectType !== 0) {\r\n            selectType.forEach(element => {\r\n                if (element === id) {\r\n                    gser = false;\r\n                }\r\n            });\r\n        }\r\n        let result = selectType\r\n        if (gser === true) {\r\n            let newArr = result.filter(item => true)\r\n            newArr.push(id)\r\n            setSelectType(newArr)\r\n        }\r\n        if (gser === false) {\r\n            let newArr = result.filter(item => item !== id)\r\n            setSelectType(newArr)\r\n        }\r\n    }\r\n\r\n    const productFilter = (dataa, value1, value2) => {\r\n        let result = []\r\n        dataa.forEach(element => {\r\n            if (value1 <= element.price && element.price <= value2) {\r\n                result.push(element);\r\n            }\r\n        });\r\n        if (selectMaterial.length !== 0) {\r\n            const newArr = result.filter(made => selectMaterial.includes(made.materialId))\r\n            result = newArr;\r\n        };\r\n        if (selectMade.length !== 0) {\r\n            const newArr = result.filter(made => selectMade.includes(made.madeCountryId))\r\n            result = newArr;\r\n        };\r\n        if (selectType.length !== 0) {\r\n            const newArr = result.filter(type => selectMade.includes(made.typeId))\r\n            result = newArr;\r\n        };\r\n        return result;\r\n    }\r\n    const filterMaterial = (allDevices, allMaterials) => {\r\n        let idArr = []\r\n        allDevices.forEach(element => {\r\n            if (!idArr.includes(element.materialId)) {\r\n                idArr.push(element.materialId)\r\n            }\r\n        });\r\n        const filterMaterials = allMaterials.filter(material => idArr.includes(material.id))\r\n        setUseMaterials(filterMaterials)\r\n    }\r\n    const filterMadeCountry = (allDevices, allMadeCountry) => {\r\n        let idArr = []\r\n        allDevices.forEach(element => {\r\n            if (!idArr.includes(element.madeCountryId)) {\r\n                idArr.push(element.madeCountryId)\r\n            }\r\n        });\r\n        const filterMade = allMadeCountry.filter(made => idArr.includes(made.id))\r\n        setUseMadeCountry(filterMade)\r\n    }\r\n\r\n    const filterType = (allDevices, allType) => {\r\n        let idArr = []\r\n        allDevices.forEach(element => {\r\n            if (!idArr.includes(element.typeId)) {\r\n                idArr.push(element.typeId)\r\n            }\r\n        });\r\n        const filterType = allType.filter(type => idArr.includes(type.id))\r\n        setUseType(filterType)\r\n    }\r\n\r\n    const maxPrice = (dataa) => {\r\n        let maxPrice = 0;\r\n        dataa.forEach(element => {\r\n            if (element.price > maxPrice) {\r\n                maxPrice = element.price\r\n            }\r\n        });\r\n        return maxPrice;\r\n    }\r\n    useEffect(() => {\r\n        fetchDevices().then(data => {\r\n            let maxPricee = maxPrice(data.rows);\r\n            device.setAllDevices(data.rows)\r\n            device.setMaxPrice(maxPricee)\r\n            setValue([0, maxPricee])\r\n        })\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchMaterials().then(data => device.setMaterials(data))\r\n        fetchMadeCountries().then(data => device.setMadeCountry(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        filterMaterial(device.allDevices, device.materials)\r\n        filterMadeCountry(device.allDevices, device.madeCountry)\r\n        filterType(device.allDevices, device.types)\r\n\r\n    }, [device.materials, device.madeCountry])\r\n\r\n    useEffect(() => {\r\n        let result = productFilter(device.allDevices, value[0], value[1])\r\n        device.setDevices(result)\r\n        setCurrentPage(1)\r\n        console.log(result);\r\n    }, [device.page, device.selectedType, device.selectedBrand, value, selectMaterial, selectMade])\r\n\r\n    console.log(device.allDevices);\r\n    const lastProductIndex = currentPage * countriesPerPage;\r\n    const firstProductIndex = lastProductIndex - countriesPerPage;\r\n    const currentProduct = device.devices.slice(firstProductIndex, lastProductIndex)\r\n\r\n    const paginate = (numberPage) => {\r\n        setCurrentPage(numberPage)\r\n    }\r\n\r\n    return (\r\n        <div className=\"myContainer\">\r\n            <h1 style={{ padding: '20px 0' }}>Искуственные елку</h1>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <div className=\"filter\">\r\n                        <h4>Фильтр подбора</h4>\r\n                        <div className=\"block-filter\">\r\n                            <p>Цена</p>\r\n                            <div className=\"inputs-range-slider\">\r\n                                <input\r\n                                    value={value[0]}\r\n                                    onChange={e => setValue([e.target.value, value[1]])}\r\n                                />\r\n                                <input\r\n                                    value={value[1]}\r\n                                    onChange={e => setValue([value[0], e.target.value])}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    sx={{\r\n                                        marginTop: 2,\r\n                                        width: '100%',\r\n                                        color: 'green',\r\n                                    }}\r\n                                    min={0}\r\n                                    max={device.maxPrice}\r\n                                    step={10}\r\n                                    value={value}\r\n                                    onChange={updateRange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter-item\">\r\n                            <p className=\"title-filter\">Материалы</p>\r\n                            <div className=\"filterButton\">\r\n                                {useMaterials.map(item =>\r\n                                    <label key={item.id}>\r\n                                        <input type=\"checkbox\" onClick={() => setOrDeleteTypes(item.id)} />\r\n                                        <span className=\"filter-item\" style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter-item\">\r\n                            <p className=\"title-filter\">Страна изготовитель</p>\r\n                            <div className=\"filterButton\">\r\n                                {useMadeCountry.map(item =>\r\n                                    <label key={item.id}>\r\n                                        <input type=\"checkbox\" onClick={() => setOrDeleteCountry(item.id)} />\r\n                                        <span className=\"filter-item\" style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-filter-item\">\r\n                            <p className=\"title-filter\">Вид</p>\r\n                            <div className=\"filterButton\">\r\n                                {useType.map(item =>\r\n                                    <label key={item.id}>\r\n                                        <input type=\"checkbox\" onClick={() => setOrDeleteType(item.id)} />\r\n                                        <span className=\"filter-item\" style={{ paddingLeft: 10 }}>{item.name}</span>\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <DeviceList currentProduct={currentProduct} />\r\n                    <Pagination countriesPerPage={countriesPerPage} totalProduct={device.devices.length} paginate={paginate} />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}